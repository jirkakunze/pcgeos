/********************************************************************
 *
 * PROJECT::	ShiSen-Sho Game for PC/Geos
 *
 * DESCRIPTION:	a japanese game similar to mahjongg
 *
 * FILE:	shisen.goh
 *
 * REMARK:	this code is ported from the KDE project "KSHISEN"
 *		created by Mario Weilguni <mweilguni@sime.com>
 *
 *		SHISEN is free software; you can redistribute it
 *		and/or modify it under the terms of the
 *		GNU General Public License as published by the
 * 		Free Software Foundation; either version 2, or
 *		(at your option) any later version.
 *
 * 		SHISEN is distributed in the hope that it will be
 *		useful, but WITHOUT ANY WARRANTY; without even the
 *		implied warranty of MERCHANTABILITY or FITNESS FOR A
 *		PARTICULAR PURPOSE. See the GNU General Public
 *		License for more details.
 *
 * HISTORY:	08/08/00   JKunze	initial version
 *
 *******************************************************************/

@include <stdapp.goh>
@include <game.goh>

#ifndef _SHISEN_GOH_
#define _SHISEN_GOH_

/********************************************************************
 *		helpful macros
 *******************************************************************/

#define MIN(x,y)  (((x)<=(y)) ? (x) : (y))	/* min macro       */
#define MAX(x,y)  (((x)>=(y)) ? (x) : (y))      /* max macro       */

/********************************************************************
 *		global defines
 *******************************************************************/

#define MAX_FIELD_WIDTH		30	/* max width of playfield  */
#define MAX_FIELD_HEIGHT	20	/* max height of playfield */

#define TILE_HEIGHT		56	/* height of game tile     */
#define TILE_WIDTH		40	/* width of play tile      */

#define EMPTY			100	/* define for empty tile   */
#define NUM_TILES		42	/* num of tiles in tileset */

typedef WordFlags ShisenBoardSizeFlags;	/* boardsize defines       */
  #define SBS_BOARD_SMALL	38	/* use max 38 from tileset */
  #define SBS_BOARD_NORMAL	40	/* use max 40 from tileset */
  #define SBS_BOARD_LARGE	41	/* use max 41 from tileset */
  #define SBS_BOARD_VERY_LARGE	42	/* use max 42 from tileset */

/********************************************************************
 *		declaration for ShisenProcessClass
 *******************************************************************/
@class ShisenProcessClass, GenProcessClass;

  @message void		MSG_SHISEN_PROCESS_NEW_GAME();

@endc;

/********************************************************************
 *		declaration for ShisenBoardClass
 *******************************************************************/
@class ShisenBoardClass, VisContentClass;

   @message void	MSG_SHISEN_CLEAR_HISTORY();
   @message void	MSG_SHISEN_SET_SELECTION(char x1, char y1,
                                                 char x2, char y2);
   @message void	MSG_SHISEN_GET_SELECTION(char* x1, char* y1,
                                                 char* x2, char* y2);
   @message Boolean	MSG_SHISEN_TEST_PATH(char startX, char startY,
                                             char endX, char endY);
   @message Boolean	MSG_SHISEN_FIND_2WAY_PATH(char startX, char startY,
                                                  char endX, char endY);
   @message Boolean	MSG_SHISEN_FIND_1WAY_PATH(char startX, char startY,
                                                  char endX, char endY);
   @message void	MSG_SHISEN_NEW_BOARD(char width, char height);
   @message word	MSG_SHISEN_GAME_END();

   @message void	MSG_SHISEN_GET_HINT();
   @message void	MSG_SHISEN_GET_MOVE(char* startX, char* startY,
                                            char* endX, char* endY);
   @message void	MSG_SHISEN_UPDATE_BOARD();

   @instance char		SBI_historyX[4];
   @instance char		SBI_historyY[4];
   /* in this array are stored the koordinates for drawing a path
      between two game tiles                                       */

   @instance char		SBI_selectX1;
   @instance char		SBI_selectY1;
   @instance char		SBI_selectX2;
   @instance char		SBI_selectY2;
   /* here are stored the koordinates for the two selected tiles
      if the store position 0, 0 non tiles are selected            */

   @instance char		SBI_playField[MAX_FIELD_WIDTH]
                        	             [MAX_FIELD_HEIGHT];
   /* in this array are stored the playfield                       */

   @instance char		SBI_fieldWidth;
   @instance char		SBI_fieldHeight;
   /* store the width and height of the current game field         */

   @instance TimerHandle	SBI_timerHan;

@endc;

/********************************************************************
 *		external declarations for objects in appui.goc
 *******************************************************************/
@ifndef _APPUI_GOC_
@define _APPUI_GOC_
@extern object ShisenBoardSizeList;
@extern object ShisenView;
@extern object ShisenBoard;
@endif

#endif
